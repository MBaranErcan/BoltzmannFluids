#<compute shader>

#version 460 core

#define floating_point_accuracy fp32
#define velocity_set D2Q9

#define id gl_GlobalInvocationID

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer lattice_buffer_source {
	float[] lattice_source;
};

layout(std430, binding = 1) buffer lattice_buffer_target {
	float[] lattice_target;
};

uniform ivec2 lattice_resolution;
uniform int velocity_count;

void main(){
	
	if (id.x >= lattice_resolution.x * lattice_resolution.y * velocity_count)
		return;

	int pixel_id = int(id.x) / velocity_count;
	int velocity_id = int(id.x) % velocity_count;
	ivec2 pixel_coord = ivec2(pixel_id.x % lattice_resolution.x, pixel_id.x / lattice_resolution.x);

	lattice_target[id.x] = float(velocity_id) / velocity_count;
	//lattice_target[id.x] = lattice_source[id.x];
}