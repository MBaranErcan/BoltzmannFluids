#<compute shader>

#version 460 core
#define id gl_GlobalInvocationID

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(std430) buffer lattice_buffer_source {
	float[] lattice_source;
};

layout(std430) buffer lattice_buffer_target {
	float[] lattice_target;
};

uniform ivec2 lattice_size;
uniform int velocity_count;

void main(){
	
	if (id.x >= lattice_size.x * lattice_size.y * velocity_count)
		return;

	int pixel_id = int(id.x) / velocity_count;
	int velocity_id = int(id.x) % velocity_count;
	ivec2 pixel_coord = ivec2(pixel_id.x % lattice_size.x, pixel_id.x / lattice_size.x);


	lattice_target[id.x] = lattice_source[id.x];

}